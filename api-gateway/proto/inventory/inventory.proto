syntax = "proto3";

package proto;

option go_package = "github.com/shoe-store/inventory-service/proto";

// InventoryService defines the gRPC methods for the inventory service.
service InventoryService {
  rpc GetSneakers(GetSneakersRequest) returns (GetSneakersResponse);
  rpc CreateSneaker(CreateSneakerRequest) returns (SneakerResponse);
  rpc EditSneaker(EditSneakerRequest) returns (SneakerResponse);
  rpc RemoveSneaker(RemoveSneakerRequest) returns (RemoveSneakerResponse);
  rpc GetPublicSneakers(GetPublicSneakersRequest) returns (GetPublicSneakersResponse);
}

// Request and response messages for GetSneakers
message GetSneakersRequest {
  string role = 1; // "admin" or "user"
  int32 page = 2;
  int32 limit = 3;
}

message GetSneakersResponse {
  repeated Sneaker sneakers = 1;
  int32 total = 2;
}

// Request and response messages for CreateSneaker
message CreateSneakerRequest {
  string role = 1; // "admin" only
  string brand = 2;
  string model = 3;
  int32 price = 4;
  string color = 5;
}

message SneakerResponse {
  Sneaker sneaker = 1;
}

// Request and response messages for EditSneaker
message EditSneakerRequest {
  string role = 1; // "admin" only
  string id = 2;
  string brand = 3;
  string model = 4;
  int32 price = 5;
  string color = 6;
}

// Request and response messages for RemoveSneaker
message RemoveSneakerRequest {
  string role = 1; // "admin" only
  string id = 2;
}

message RemoveSneakerResponse {
  bool success = 1;
}

// Request and response messages for GetPublicSneakers
message GetPublicSneakersRequest {
  int32 page = 1;
  int32 limit = 2;
}

message GetPublicSneakersResponse {
  repeated Sneaker sneakers = 1;
  int32 total = 2;
}

// Sneaker model
message Sneaker {
  string id = 1;
  string brand = 2;
  string model = 3;
  int32 price = 4;
  string color = 5;
}
